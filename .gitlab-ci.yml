stages:
  - setup
  - test
  - security
  - build
  - deploy

variables:
  NODE_VERSION: "18"

# Etapa de preparação para garantir que o ambiente esteja configurado corretamente
setup:
  stage: setup
  image: node:${NODE_VERSION}
  script:
    - npm install -g npm@latest
    - |
      if [ ! -f backend/package-lock.json ]; then
        echo "package-lock.json não encontrado no backend. Executando npm install."
        cd backend && npm install && cd ..
      fi
    - |
      if [ ! -f frontend/package-lock.json ]; then
        echo "package-lock.json não encontrado no frontend. Executando npm install."
        cd frontend && npm install && cd ..
      fi

test:
  stage: test
  image: node:${NODE_VERSION}
  script:
    - cd backend
    - npm ci
    - npm test
    - cd ../frontend
    - npm ci
    - npm test

security:
  stage: security
  image: node:${NODE_VERSION}
  script:
    - npm install -g npm-audit-resolver
    - cd backend
    - npm audit --audit-level=moderate
    - cd ../frontend
    - npm audit --audit-level=moderate

build:
  stage: build
  image: node:${NODE_VERSION}
  script:
    - cd frontend
    - npm ci
    - npm run build
  artifacts:
    paths:
      - frontend/dist

deploy:
  stage: deploy
  image: node:${NODE_VERSION}
  script:
    - npm install -g vercel
    - cd frontend
    - vercel --token $VERCEL_TOKEN --prod
  only:
    - main

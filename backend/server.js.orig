const express = require( 'express');
const mongoose = require( 'mongoose');
const cors = require( 'cors');
const dotenv = require( 'dotenv');
const helmet = require( 'helmet');
const rateLimit = require( 'express-rate-limit');
const { errorHandler, notFound } = require( './middleware/errorMiddleware.js');
const userRoutes = require( './routes/users.js');
const storyRoutes = require( './routes/stories.js');
const profileRoutes = require( './routes/profile.js'); 

dotenv.config();

const app = express();

// Security headers
app.use(helmet());

// Rate limiting
const limiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 minutes
  max: 100 // limit each IP to 100 requests per windowMs
});
app.use(limiter);

// CORS configuration
app.use(cors({
  origin: process.env.CLIENT_URL,
  credentials: true
}));

// Middleware
app.use(express.json());

// Routes
app.use('/api/users', userRoutes);
app.use('/api/stories', storyRoutes);
app.use('/api/profile', profileRoutes);


// Error handling middleware
app.use(notFound);
app.use(errorHandler);

module.exports =  app;